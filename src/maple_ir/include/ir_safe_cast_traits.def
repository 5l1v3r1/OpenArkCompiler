/*
 * Copyright (c) [2019] Huawei Technologies Co.,Ltd.All rights reserved.
 *
 * OpenArkCompiler is licensed under the Mulan PSL v1.
 * You can use this software according to the terms and conditions of the Mulan PSL v1.
 * You may obtain a copy of Mulan PSL v1 at:
 *
 *     http://license.coscl.org.cn/MulanPSL
 *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
 * FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v1 for more details.
 */
#include <safe_cast.h>

namespace maple {
#ifdef LOAD_SAFE_CAST_FOR_MIR_CONST
#undef LOAD_SAFE_CAST_FOR_MIR_CONST
inline MIRConstKind safe_cast_traits(const MIRConst &mirConst) {
  return mirConst.GetKind();
};

template <> struct ExtractCode<MIRIntConst> {
  enum {value = kConstInt};
};

template <> struct ExtractCode<MIRAddrofConst> {
  enum {value = kConstAddrof};
};

template <> struct ExtractCode<MIRAddroffuncConst> {
  enum {value = kConstAddrofFunc};
};

template <> struct ExtractCode<MIRLblConst> {
  enum {value = kConstLblConst};
};

template <> struct ExtractCode<MIRStrConst> {
  enum {value = kConstStrConst};
};

template <> struct ExtractCode<MIRStr16Const> {
  enum {value = kConstStr16Const};
};

template <> struct ExtractCode<MIRFloatConst> {
  enum {value = kConstFloatConst};
};

template <> struct ExtractCode<MIRDoubleConst> {
  enum {value = kConstDoubleConst};
};

template <> struct ExtractCode<MIRFloat128Const> {
  enum {value = kConstFloat128Const};
};

template <> struct ExtractCode<MIRAggConst> {
  enum {value = kConstAggConst};
};

template <> struct ExtractCode<MIRStConst> {
  enum {value = kConstStConst};
};
#endif
}
